/**
 * generated by Xtext 2.26.0
 */
package org.xtext.example.gfnc.cYK.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.gfnc.cYK.CYKPackage;
import org.xtext.example.gfnc.cYK.GFNC;
import org.xtext.example.gfnc.cYK.Production;
import org.xtext.example.gfnc.cYK.Terminal;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>GFNC</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.gfnc.cYK.impl.GFNCImpl#getW <em>W</em>}</li>
 *   <li>{@link org.xtext.example.gfnc.cYK.impl.GFNCImpl#getProductions <em>Productions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GFNCImpl extends MinimalEObjectImpl.Container implements GFNC
{
  /**
   * The cached value of the '{@link #getW() <em>W</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getW()
   * @generated
   * @ordered
   */
  protected EList<Terminal> w;

  /**
   * The cached value of the '{@link #getProductions() <em>Productions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProductions()
   * @generated
   * @ordered
   */
  protected EList<Production> productions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GFNCImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CYKPackage.Literals.GFNC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Terminal> getW()
  {
    if (w == null)
    {
      w = new EObjectContainmentEList<Terminal>(Terminal.class, this, CYKPackage.GFNC__W);
    }
    return w;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Production> getProductions()
  {
    if (productions == null)
    {
      productions = new EObjectContainmentEList<Production>(Production.class, this, CYKPackage.GFNC__PRODUCTIONS);
    }
    return productions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CYKPackage.GFNC__W:
        return ((InternalEList<?>)getW()).basicRemove(otherEnd, msgs);
      case CYKPackage.GFNC__PRODUCTIONS:
        return ((InternalEList<?>)getProductions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CYKPackage.GFNC__W:
        return getW();
      case CYKPackage.GFNC__PRODUCTIONS:
        return getProductions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CYKPackage.GFNC__W:
        getW().clear();
        getW().addAll((Collection<? extends Terminal>)newValue);
        return;
      case CYKPackage.GFNC__PRODUCTIONS:
        getProductions().clear();
        getProductions().addAll((Collection<? extends Production>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CYKPackage.GFNC__W:
        getW().clear();
        return;
      case CYKPackage.GFNC__PRODUCTIONS:
        getProductions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CYKPackage.GFNC__W:
        return w != null && !w.isEmpty();
      case CYKPackage.GFNC__PRODUCTIONS:
        return productions != null && !productions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //GFNCImpl
