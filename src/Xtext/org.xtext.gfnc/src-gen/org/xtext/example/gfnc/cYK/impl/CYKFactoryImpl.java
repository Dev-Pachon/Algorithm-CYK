/**
 * generated by Xtext 2.26.0
 */
package org.xtext.example.gfnc.cYK.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.gfnc.cYK.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class CYKFactoryImpl extends EFactoryImpl implements CYKFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static CYKFactory init()
  {
    try
    {
      CYKFactory theCYKFactory = (CYKFactory)EPackage.Registry.INSTANCE.getEFactory(CYKPackage.eNS_URI);
      if (theCYKFactory != null)
      {
        return theCYKFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new CYKFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CYKFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case CYKPackage.GFNC: return createGFNC();
      case CYKPackage.PRODUCTION: return createProduction();
      case CYKPackage.RIGTH: return createRigth();
      case CYKPackage.SIMPLE: return createSimple();
      case CYKPackage.NON_TERMINAL: return createNonTerminal();
      case CYKPackage.BINARY: return createBinary();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GFNC createGFNC()
  {
    GFNCImpl gfnc = new GFNCImpl();
    return gfnc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Production createProduction()
  {
    ProductionImpl production = new ProductionImpl();
    return production;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Rigth createRigth()
  {
    RigthImpl rigth = new RigthImpl();
    return rigth;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Simple createSimple()
  {
    SimpleImpl simple = new SimpleImpl();
    return simple;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NonTerminal createNonTerminal()
  {
    NonTerminalImpl nonTerminal = new NonTerminalImpl();
    return nonTerminal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Binary createBinary()
  {
    BinaryImpl binary = new BinaryImpl();
    return binary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CYKPackage getCYKPackage()
  {
    return (CYKPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static CYKPackage getPackage()
  {
    return CYKPackage.eINSTANCE;
  }

} //CYKFactoryImpl
