/**
 * generated by Xtext 2.26.0
 */
package org.xtext.example.gfnc.cYK.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.gfnc.cYK.CYKPackage;
import org.xtext.example.gfnc.cYK.Simple;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Simple</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.gfnc.cYK.impl.SimpleImpl#getTerminals <em>Terminals</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SimpleImpl extends MinimalEObjectImpl.Container implements Simple
{
  /**
   * The default value of the '{@link #getTerminals() <em>Terminals</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTerminals()
   * @generated
   * @ordered
   */
  protected static final String TERMINALS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTerminals() <em>Terminals</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTerminals()
   * @generated
   * @ordered
   */
  protected String terminals = TERMINALS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SimpleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CYKPackage.Literals.SIMPLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTerminals()
  {
    return terminals;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTerminals(String newTerminals)
  {
    String oldTerminals = terminals;
    terminals = newTerminals;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CYKPackage.SIMPLE__TERMINALS, oldTerminals, terminals));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CYKPackage.SIMPLE__TERMINALS:
        return getTerminals();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CYKPackage.SIMPLE__TERMINALS:
        setTerminals((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CYKPackage.SIMPLE__TERMINALS:
        setTerminals(TERMINALS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CYKPackage.SIMPLE__TERMINALS:
        return TERMINALS_EDEFAULT == null ? terminals != null : !TERMINALS_EDEFAULT.equals(terminals);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (terminals: ");
    result.append(terminals);
    result.append(')');
    return result.toString();
  }

} //SimpleImpl
